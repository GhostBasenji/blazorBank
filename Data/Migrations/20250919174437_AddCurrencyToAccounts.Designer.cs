// <auto-generated />
using System;
using Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(BlazorBankContext))]
    [Migration("20250919174437_AddCurrencyToAccounts")]
    partial class AddCurrencyToAccounts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal?>("Balance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0.00m);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("Currency")
                        .HasColumnType("int")
                        .HasColumnName("Currency");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("AccountId");

                    b.HasIndex("AccountNumber")
                        .IsUnique()
                        .HasFilter("[AccountNumber] IS NOT NULL");

                    b.HasIndex("ClientId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("StatusId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Data.Models.AccountStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StatusId")
                        .HasName("PK__AccountS__C8EE2043505EC1A8");

                    b.HasIndex(new[] { "StatusName" }, "UQ__AccountS__05E7698A9A205CF1")
                        .IsUnique();

                    b.ToTable("AccountStatuses");
                });

            modelBuilder.Entity("Data.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClientID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClientId")
                        .HasName("PK__Clients__E67E1A04DD96546F");

                    b.HasIndex(new[] { "Email" }, "IX_Clients_Email");

                    b.HasIndex(new[] { "PasswordHash" }, "IX_Clients_PasswordHash");

                    b.HasIndex(new[] { "Username" }, "UQ_Clients_Username")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Clients__A9D1053445AF7A54")
                        .IsUnique();

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Data.Models.ClientLogin", b =>
                {
                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LoginID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoginId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("ClientID");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LoginTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("LoginId")
                        .HasName("PK__ClientLo__4DDA2838FE43494C");

                    b.HasIndex(new[] { "ClientId" }, "IX_ClientLogins_ClientID");

                    b.HasIndex(new[] { "LoginTime" }, "IX_ClientLogins_LoginTime");

                    b.ToTable("ClientLogins");
                });

            modelBuilder.Entity("Data.Models.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CurrencyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyId"));

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CurrencyId")
                        .HasName("PK__Currenci__14470B10C6D2D189");

                    b.HasIndex(new[] { "CurrencyCode" }, "UQ__Currenci__408426BF993BF6C5")
                        .IsUnique();

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Data.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("HireDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__7AD04FF1770897F7");

                    b.HasIndex(new[] { "Email" }, "IX_Employees_Email");

                    b.HasIndex(new[] { "Email" }, "UQ__Employee__A9D10534BE912D85")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Data.Models.EmployeeAction", b =>
                {
                    b.Property<int>("ActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ActionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActionId"));

                    b.Property<DateTime?>("ActionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<int?>("RelatedEntityId")
                        .HasColumnType("int")
                        .HasColumnName("RelatedEntityID");

                    b.Property<string>("RelatedEntityType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ActionId")
                        .HasName("PK__Employee__FFE3F4B929BC6A09");

                    b.HasIndex(new[] { "ActionDate" }, "IX_EmployeeActions_ActionDate");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmployeeActions_EmployeeID");

                    b.ToTable("EmployeeActions");
                });

            modelBuilder.Entity("Data.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TransactionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("AccountID");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("TransactionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TransactionTypeID");

                    b.HasKey("TransactionId")
                        .HasName("PK__Transact__55433A4B27783051");

                    b.HasIndex(new[] { "AccountId" }, "IX_Transactions_AccountID");

                    b.HasIndex(new[] { "TransactionDate" }, "IX_Transactions_TransactionDate");

                    b.HasIndex(new[] { "TransactionTypeId" }, "IX_Transactions_TransactionTypeID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Data.Models.TransactionType", b =>
                {
                    b.Property<int>("TransactionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TransactionTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionTypeId"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TransactionTypeId")
                        .HasName("PK__Transact__20266CEB987F6569");

                    b.ToTable("TransactionTypes");
                });

            modelBuilder.Entity("Data.Models.Account", b =>
                {
                    b.HasOne("Data.Models.Client", "Client")
                        .WithMany("Accounts")
                        .HasForeignKey("ClientId")
                        .IsRequired();

                    b.HasOne("Data.Models.Currency", null)
                        .WithMany("Accounts")
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Data.Models.AccountStatus", "Status")
                        .WithMany("Accounts")
                        .HasForeignKey("StatusId")
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Data.Models.ClientLogin", b =>
                {
                    b.HasOne("Data.Models.Client", "Client")
                        .WithMany("ClientLogins")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__ClientLog__Clien__4316F928");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Data.Models.EmployeeAction", b =>
                {
                    b.HasOne("Data.Models.Employee", "Employee")
                        .WithMany("EmployeeActions")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeA__Emplo__440B1D61");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Data.Models.Transaction", b =>
                {
                    b.HasOne("Data.Models.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__Transacti__Accou__44FF419A");

                    b.HasOne("Data.Models.TransactionType", "TransactionType")
                        .WithMany("Transactions")
                        .HasForeignKey("TransactionTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Transacti__Trans__45F365D3");

                    b.Navigation("Account");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("Data.Models.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Data.Models.AccountStatus", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Data.Models.Client", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("ClientLogins");
                });

            modelBuilder.Entity("Data.Models.Currency", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Data.Models.Employee", b =>
                {
                    b.Navigation("EmployeeActions");
                });

            modelBuilder.Entity("Data.Models.TransactionType", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
