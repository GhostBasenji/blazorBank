@using Client.Services
@using Data.Services
@inject Data.Services.IClientAuthService AuthService
@inject CurrentClientService CurrentClient
@inject NavigationManager Nav
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;


<div class="card p-4" style="width: 400px;">
    <h4 class="mb-3 text-center">Sign In</h4>

    <div class="mb-3">
        <input type="text" class="form-control" placeholder="Login or email" @bind="login" />
    </div>
    <div class="mb-3">
        <input type="password" class="form-control" placeholder="Password" @bind="password" />
    </div>
    <div class="d-flex justify-content-between">
        <button class="btn btn-primary" @onclick="HandleLogin">Sign In</button>
        <button class="btn btn-secondary" @onclick="OnCancel">Cancel</button>
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="text-danger mt-3">@errorMessage</div>
    }
</div>

@code {
    [Parameter] public EventCallback OnCancel { get; set; }

    private string login = string.Empty;
    private string password = string.Empty;
    private string? errorMessage;

    private async Task HandleLogin()
    {
        var client = await AuthService.AuthenticateAsync(login, password);

        if (client is not null)
        {
            await CurrentClient.SetClientAsync(client);
            errorMessage = null;
            Nav.NavigateTo("/account");
        }
        else
        {
            errorMessage = "Invalid login or password.";
        }
    }

}
