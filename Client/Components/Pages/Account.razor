@page "/account"
@using Data.DTOs
@inject Data.Services.IClientAuthService AuthService
@inject Client.Services.CurrentClientService CurrentClient
@inject Data.Services.IAccountService AccountService
@inject NavigationManager Nav
@rendermode InteractiveServer

<h3 class="mb-4">Account Information</h3>

@if (isLoading)
{
    <p>Loading account details...</p>
}
else if (accountInfo == null)
{
    <p>No account information found.</p>
}
else
{
    <table class="table table-bordered table-hover table-striped text-center" style="max-width: 100%; border-radius: 0.5rem; overflow: hidden;">
        <thead class="table-light">
            <tr>
                <th>Account Number</th>
                <th>Full Name</th>
                <th>Currency</th>
                <th>Status</th>
                <th>Balance</th>
                <th>Created At</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@accountInfo.AccountNumber</td>
                <td>@accountInfo.FullName</td>
                <td>@accountInfo.Currency</td>
                <td>@accountInfo.Status</td>
                <td>@accountInfo.Balance?.ToString("C")</td>
                <td>@accountInfo.CreatedAt?.ToString("yyyy-MM-dd")</td>
            </tr>
        </tbody>
    </table>

}

@code {
    private AccountInfoDto? accountInfo;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await CurrentClient.LoadClientAsync();

            if (CurrentClient.LoggedInClient == null)
            {
                Nav.NavigateTo("/login");
                return;
            }

            accountInfo = await AccountService.GetAccountInfoByClientIdAsync(CurrentClient.LoggedInClient.ClientId);
        }
        catch (Exception ex)
        {
            accountInfo = null;
        }
        finally
        {
            isLoading = false;
        }

        // Console.WriteLine($"Current logged-in client ID: {CurrentClient.LoggedInClient?.ClientId}");
    }
}